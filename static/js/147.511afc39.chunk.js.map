{"version":3,"file":"static/js/147.511afc39.chunk.js","mappings":"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","sources":["helpers/pokemonHelpers.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","api/apiClient.js","hooks/pokemonQueries.jsx","api/endpoints.js","pages/Details/Evolution.jsx","pages/Details/Stat.jsx","pages/Details/Details.jsx","pages/NotFound/NotFound.jsx"],"sourcesContent":["export const getAvatarUrl = (id) => {\n\tconst baseURL = \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/\";\n\treturn `${baseURL}${String(id).padStart(3, \"0\")}.png`;\n};\n\nexport const getDescription = (arrayDescriptions = []) => {\n\tconst { flavor_text } = arrayDescriptions.find((item) => item.language.name === \"en\");\n\treturn flavor_text;\n};\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","const apiConfig = {\n\tbaseUrl: \"https://pokeapi.co/api/v2\",\n\n\theaders: {\n\t\t\"Content-Type\": \"application/json\",\n\t},\n};\n\nconst generateUrl = (path) => {\n\tconst { baseUrl } = apiConfig;\n\n\tif (path.startsWith(\"https://\")) {\n\t\treturn path;\n\t}\n\n\treturn `${baseUrl}${path}`;\n};\n\nconst apiClient = () => {\n\tconst { headers } = apiConfig;\n\tconst options = {};\n\n\tconst get = async (path) => {\n\t\tconst url = generateUrl(path);\n\t\tconst response = await fetch(url, { headers, ...options });\n\n\t\tif (!response.ok) {\n\t\t\tconst message = await response.text();\n\n\t\t\tconst errorObject = {\n\t\t\t\tcode: response.status,\n\t\t\t\tmessage,\n\t\t\t};\n\n\t\t\tthrow errorObject;\n\t\t}\n\n\t\treturn await response.json();\n\t};\n\n\treturn {\n\t\tget,\n\t};\n};\n\nexport default apiClient();\n","import { useQuery } from \"react-query\";\nimport apiClient from \"api/apiClient\";\n\nimport {\n\tfetchPokemon,\n\tfetchPokemonList,\n\tfetchPokemonSpecies,\n} from \"api/endpoints\";\n\nexport const usePokemonList = (options = {}) => {\n\tconst {\n\t\tlimit,\n\t\toffset,\n\t} = options;\n\n\treturn useQuery(\n\t\t[\"pokemon-list\", offset],\n\t\t() => fetchPokemonList({ offset, limit }),\n\t);\n};\n\nexport const usePokemonDetails = (id) => {\n\tconst {\n\t\tdata: pokemonData = {},\n\t\tisLoading: isPokemonLoading,\n\t\terror: pokemonError,\n\t} = useQuery(\n\t\t[\"pokemon\", id],\n\t\t() => fetchPokemon(id),\n\t);\n\n\tconst {\n\t\tdata: species = {},\n\t\tisLoading: isSpeciesLoading,\n\t\terror: speciesError,\n\t} = useQuery(\n\t\t[\"pokemon-species\", id],\n\t\t() => fetchPokemonSpecies(id),\n\t);\n\n\tconst isLoading = isPokemonLoading || isSpeciesLoading;\n\tconst error = pokemonError || speciesError;\n\n\treturn {\n\t\tdata: {\n\t\t\tdetails: pokemonData,\n\t\t\tspecies: species,\n\t\t},\n\n\t\tisLoading,\n\t\terror,\n\t};\n};\n\nexport const useCustomRequest = (url) => {\n\treturn useQuery(\n\t\t[\"pokemon-custom-request\", url],\n\t\t() => apiClient.get(url),\n\t);\n};\n","import apiClient from \"./apiClient\";\n\nexport const fetchPokemonList = (params = {}) => {\n\tconst {\n\t\toffset = 0,\n\t\tlimit = 12,\n\t} = params;\n\n\treturn apiClient.get(`/pokemon/?limit=${limit}&offset=${offset}`);\n};\n\nexport const fetchPokemon = (id) => apiClient.get(`/pokemon/${id}/`);\n\nexport const fetchPokemonSpecies = (id) => apiClient.get(`/pokemon-species/${id}/`);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useCustomRequest } from \"hooks/pokemonQueries\";\n\nconst generateEvolutionRows = (chain) => {\n\tconst rows = [];\n\n\tfunction generateRow(chainElement, currentRow = []) {\n\t\tconst { species, evolves_to } = chainElement;\n\t\tconst newRow = [...currentRow, species.name];\n\n\t\tif (evolves_to.length === 0) {\n\t\t\trows.push(newRow);\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const nextChain of evolves_to) {\n\t\t\tgenerateRow(nextChain, newRow);\n\t\t}\n\t}\n\n\tgenerateRow(chain);\n\treturn rows;\n};\n\nconst Evolution = ({ url }) => {\n\tconst {\n\t\tdata = {},\n\t\tisLoading,\n\t\terror,\n\t} = useCustomRequest(url);\n\n\tconst { chain = {} } = data;\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div>Loading chain...</div>\n\t\t);\n\t}\n\n\tif (error) {\n\t\treturn (\n\t\t\t<div>Error: {error.message}</div>\n\t\t);\n\t}\n\n\tconst evolutionRows = generateEvolutionRows(chain);\n\n\treturn (\n\t\t<div>\n\t\t\t<p>Evolution</p>\n\n\t\t\t{evolutionRows.map((chain) => {\n\t\t\t\tconst key = chain.join('-');\n\n\t\t\t\treturn (\n\t\t\t\t\t<div key={key}>\n\t\t\t\t\t\t{chain.map((pokemon) => (\n\t\t\t\t\t\t\t<span key={pokemon}>{pokemon}</span>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nEvolution.propTypes = {\n\turl: PropTypes.string.isRequired,\n};\n\nexport default Evolution;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst max = 255;\n\nconst Indicator = styled.div`\n\twidth: 148px;\n\theight: 6px;\n\tbackground-color: gray;\n`;\n\nconst FilledValue = styled.div`\n\twidth: ${({ $width }) => $width}%;\n\theight: 6px;\n\tbackground-color: red;\n`;\n\nconst Stat = ({ name, value }) => {\n\tconst percent = (value * 100) / max;\n\n\treturn (\n\t\t<div>\n\t\t\t<span>{name}</span>\n\t\t\t<span>{value}</span>\n\n\t\t\t<Indicator>\n\t\t\t\t<FilledValue $width={percent} />\n\t\t\t</Indicator>\n\t\t</div>\n\t);\n};\n\nStat.propTypes = {\n\tname: PropTypes.string.isRequired,\n\tvalue: PropTypes.number.isRequired,\n};\n\nexport default Stat;\n","import React from \"react\";\nimport { useParams, NavLink } from \"react-router-dom\";\nimport NotFound from \"pages/NotFound\";\nimport Evolution from \"./Evolution\";\nimport Stat from \"./Stat\";\nimport { usePokemonDetails } from \"hooks/pokemonQueries\";\nimport { getDescription } from \"helpers/pokemonHelpers\";\n\nconst maxCaptureRate = 255;\n\nconst Details = () => {\n\tconst { pokemonName } = useParams();\n\n\tconst {\n\t\tdata = {},\n\t\tisLoading,\n\t\terror,\n\t} = usePokemonDetails(pokemonName);\n\n\tif (isLoading) {\n\t\treturn <div>Loading...</div>;\n\t}\n\n\tif (error) {\n\t\tif (error.code === 404) {\n\t\t\treturn (\n\t\t\t\t<NotFound />\n\t\t\t);\n\t\t}\n\n\t\treturn <div>Error: {error.message}</div>;\n\t}\n\n\tconst { details, species } = data;\n\n\tconst {\n\t\tid,\n\t\tname,\n\t\tweight,\n\t\tsprites = {},\n\t\ttypes = [],\n\t\tstats = [],\n\t\tabilities = [],\n\t} = details;\n\n\tconst {\n\t\tvarieties,\n\t\tcapture_rate,\n\t\tevolution_chain = {},\n\t\tegg_groups = [],\n\t\tflavor_text_entries = [],\n\t} = species;\n\n\tconst previousPokemonId = id - 1;\n\tconst formattedPreviousPokemonId = String(previousPokemonId).padStart(4, 0);\n\tconst nextPokemonId = id + 1;\n\tconst formattedNextPokemonId = String(nextPokemonId).padStart(4, 0);\n\tconst isPreviousPokemonExist = previousPokemonId > 0;\n\tconst description = getDescription(flavor_text_entries);\n\tconst catchRate = ((capture_rate * 100) / maxCaptureRate).toFixed(1);\n\n\treturn (\n\t\t<div>\n\t\t\t<img width=\"300\" src={sprites.other.dream_world.front_default} alt={pokemonName} />\n\t\t\t<div>Name: {name}</div>\n\t\t\t<div data-testid=\"pokemon-weight\">Weight: {weight}</div>\n\n\t\t\t{types.map((item) => (\n\t\t\t\t<span key={item.slot}>{item.type.name}</span>\n\t\t\t))}\n\n\t\t\t{stats.map((item) => (\n\t\t\t\t<Stat key={item.stat.name} name={item.stat.name} value={item.base_stat} />\n\t\t\t))}\n\n\t\t\t<div>\n\t\t\t\t<p>Versions</p>\n\n\t\t\t\t<div>\n\t\t\t\t\t{varieties.map((version) => (\n\t\t\t\t\t\t<div key={version.pokemon.name}>\n\t\t\t\t\t\t\t<NavLink to={`/pokemon/${version.pokemon.name}`}>{version.pokemon.name}</NavLink>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<p>Story</p>\n\t\t\t\t<p>{description}</p>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<p>Abilities</p>\n\n\t\t\t\t<div>\n\t\t\t\t\t{abilities.map((item) => (\n\t\t\t\t\t\t<span key={item.ability.name}>{item.ability.name}</span>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<p>Catch rate</p>\n\t\t\t\t<p>{catchRate}%</p>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<p>Egg group</p>\n\n\t\t\t\t<div>\n\t\t\t\t\t{egg_groups.map((item) => (\n\t\t\t\t\t\t<span key={item.name}>{item.name}</span>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{isPreviousPokemonExist && (\n\t\t\t\t<NavLink to={`/pokemon/${previousPokemonId}/`}>prev #{formattedPreviousPokemonId}</NavLink>\n\t\t\t)}\n\n\t\t\t<NavLink to={`/pokemon/${nextPokemonId}/`}>next #{formattedNextPokemonId}</NavLink>\n\n\t\t\t{evolution_chain.url && (\n\t\t\t\t<Evolution url={evolution_chain.url} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Details;\n","import React from \"react\";\n\nconst NotFound = () => {\n\treturn (\n\t\t<div>\n\t\t\tNot found\n\t\t</div>\n\t);\n};\n\nexport default NotFound;\n"],"names":["getDescription","arguments","length","undefined","find","item","language","name","flavor_text","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","apiConfig","generateUrl","path","baseUrl","startsWith","concat","headers","options","get","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","message","wrap","_context","prev","next","fetch","_objectSpread","sent","ok","text","code","status","json","abrupt","stop","_x","usePokemonList","limit","offset","useQuery","params","_params$offset","_params$limit","apiClient","fetchPokemonList","usePokemonDetails","id","_useQuery","fetchPokemon","_useQuery$data","data","pokemonData","isPokemonLoading","isLoading","pokemonError","error","_useQuery2","fetchPokemonSpecies","_useQuery2$data","species","isSpeciesLoading","speciesError","details","useCustomRequest","_useCustomRequest","_useCustomRequest$dat","_data$chain","chain","_jsx","children","_jsxs","evolutionRows","rows","generateRow","chainElement","currentRow","evolves_to","newRow","_toConsumableArray","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","generateEvolutionRows","map","join","pokemon","Indicator","styled","div","_templateObject","_taggedTemplateLiteral","FilledValue","_templateObject2","$width","_ref2","percent","pokemonName","useParams","_usePokemonDetails","_usePokemonDetails$da","NotFound","weight","_details$sprites","sprites","_details$types","types","_details$stats","stats","_details$abilities","abilities","varieties","capture_rate","_species$evolution_ch","evolution_chain","_species$egg_groups","egg_groups","_species$flavor_text_","flavor_text_entries","previousPokemonId","formattedPreviousPokemonId","String","padStart","nextPokemonId","formattedNextPokemonId","isPreviousPokemonExist","description","catchRate","toFixed","width","src","other","dream_world","front_default","alt","type","slot","Stat","stat","base_stat","version","NavLink","to","ability","Evolution"],"sourceRoot":""}